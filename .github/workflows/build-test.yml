name: Build & Test

on: 
  workflow_dispatch:
  repository_dispatch:
    types: [build-test]

jobs:
  build-for-test:
    if: "! (contains(github.event.head_commit.message, '[skip ci]') || contains(github.event.head_commit.message, '[bump]'))"
    runs-on: [self-hosted, linux]
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.ref }}

      - name: Set up GoLang
        uses: actions/setup-go@v3
        with:
          go-version: "1.21"
          cache: false
          
      # - uses: actions/cache@v3
      #   with:
      #     path: ~/go/pkg/mod
      #     key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      #     restore-keys: |
      #       ${{ runner.os }}-go-

      - name: Build
        env:
          # VERSION: ${{ steps.get_version.outputs.VERSION }}
          # VERSION: ${{ github.event.client_payload.version }}
          VERSION: ${{ needs.bump.outputs.new_version }}
          REF_NAME: ${{ github.ref_name }}
        
        run: |
          echo "VERSION -> $VERSION"
          echo "REF_NAME -> $REF_NAME"

          bash scripts/prep.gomod.sh
          bash scripts/build.test.sh $VERSION

  test:
    if: "! (contains(github.event.head_commit.message, '[skip ci]') || contains(github.event.head_commit.message, '[no test]') || contains(github.event.head_commit.message, '[nt]') || contains(github.event.head_commit.message, '[bump]'))"

    needs: [build-for-test]

    runs-on: [self-hosted, linux]
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v2
      - uses: myrotvorets/set-commit-status-action@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          sha: ${{ github.sha }}
          status: pending
        
      - name: Configure Environment
        uses: flarco/envkey-action@main
        with:
          envkey: ${{ secrets.ENVKEY }}

      - name: Set up GoLang
        uses: actions/setup-go@v3
        with:
          go-version: "1.21"
          cache: false

      - name: Run Go Tests
        run: |
          export DEBUG=''
          bash scripts/prep.gomod.sh && bash scripts/test.sh

      - uses: myrotvorets/set-commit-status-action@master
        if: always()
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          sha: ${{ github.sha }}
          status: ${{ job.status }}